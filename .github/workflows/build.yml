name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      push:
        description: 'Push image'
        required: false
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: patchman

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v4

    - uses: docker/setup-qemu-action@v3

    - uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Define build args
      # This is all horrible but it works™️
      run: |
        IMAGE="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"

        if [[ "${{ github.event_name }}" == 'push' || "${{ github.event_name }}" == 'workflow_dispatch' ]]; then
          BRANCH="${GITHUB_REF#refs/heads/}"
        elif [[ "${{ github.event_name }}" == 'pull_request' ]]; then
          BRANCH="pr${{ github.event.number }}"
        fi

        PATCHMAN_VERSION="$(cat Dockerfile | grep 'ARG PATCHMAN_VERSION' | sed -r 's/.*="(.*)"/\1/')"
        if [[ "$BRANCH" == "main" ]]; then
          echo "TAGS=$IMAGE:$PATCHMAN_VERSION,$IMAGE:latest" >> $GITHUB_ENV
        else
          echo "TAGS=$IMAGE:$PATCHMAN_VERSION-$BRANCH" >> $GITHUB_ENV
        fi

    - uses: docker/metadata-action@v5
      id: meta
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ env.TAGS }}

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        push: ${{ inputs.push != 'false' }} # is null if trigger != workflow_dispatch
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false

    # https://github.com/orgs/community/discussions/26716#discussioncomment-3253034
    - name: Prune untagged images
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
        script: |
          const response = await github.request("GET /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions",
            { per_page: ${{ env.PER_PAGE }}
          });
          for(version of response.data) {
              if (version.metadata.container.tags.length == 0) {
                  console.log("delete " + version.id)
                  const deleteResponse = await github.request("DELETE /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
                  console.log("status " + deleteResponse.status)
              }
          }
      env:
        OWNER: user
        PACKAGE_NAME: ${{ env.IMAGE_NAME }}
        PER_PAGE: 100
